# ==========================================================
# Application Info
# ==========================================================
spring.application.name=01blog
server.port=9090

# ==========================================================
# PostgreSQL Database Configuration
# ==========================================================
spring.datasource.url=jdbc:postgresql://localhost:5432/blogdb
spring.datasource.username=admin
spring.datasource.password=pass
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ==========================================================
# JPA / Hibernate Configuration
# ==========================================================
# Disable automatic schema creation (Flyway will manage it)
spring.jpa.hibernate.ddl-auto=none

# Show SQL in logs
spring.jpa.show-sql=false

# ==========================================================
# Flyway Database Migration
# ==========================================================
# Enable Flyway (runs automatically at startup)
spring.flyway.enabled=true

# Location where migration scripts live
spring.flyway.locations=classpath:db/migration

# Baseline existing database (for databases that already have data)
spring.flyway.baseline-on-migrate=true

# ==========================================================
# (Optional) One-time Hibernate schema export
# Uncomment these lines if you want to auto-generate your Flyway migration from entities
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/db/migration/V1__init_schema.sql
# spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# ==========================================================
# File Upload Configuration
# ==========================================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ==========================================================
# JWT Configuration
# ==========================================================
jwt.secret=${JWT_SECRET:my-super-secret-jwt-key-that-should-be-at-least-256-bits-long-for-hs256-algorithm}
jwt.expiration=900000

# ==========================================================
# Redis Configuration
# ==========================================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=60000

# ==========================================================
# Gateway Configuration (CORS-based validation)
# ==========================================================
# Enable/disable gateway authentication (set to false for local development)
gateway.enabled=${GATEWAY_ENABLED:false}
# CORS allowed origins (comma-separated, supports wildcards like http://localhost:*)
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:3000,http://localhost:8080}

# ==========================================================
# File Storage (Supabase)
# ==========================================================

# ==========================================================
# Environment Variables (.env Support)
# ==========================================================
spring.config.import=optional:file:.env[.properties]

# ==========================================================
# Supabase Storage Configuration
# ==========================================================
# Example: https://<your-project-ref>.supabase.co
supabase.url=${SUPABASE_URL:https://ignxxxvrotsqhvowancz.supabase.co}
supabase.service-role-key=${SUPABASE_SERVICE_ROLE_KEY:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imlnbnh4eHZyb3RzcWh2b3dhbmN6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MTU2OTkyNywiZXhwIjoyMDc3MTQ1OTI3fQ.sm2gSs7XWNNQ_XbZkeOJt4jyCBcCtZ4ReuJqpWiM1E8}
supabase.storage.bucket=${SUPABASE_STORAGE_BUCKET:01blog}