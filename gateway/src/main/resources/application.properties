# ==========================================================
# Gateway Application Configuration
# ==========================================================
spring.application.name=api-gateway
server.port=8080

# ==========================================================
# Redis Configuration for Rate Limiting
# ==========================================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}

# ==========================================================
# Backend Service Configuration
# ==========================================================
backend.url=${BACKEND_URL:http://localhost:9090}

# ==========================================================
# Gateway Security - CORS-based validation
# ==========================================================
# Gateway now uses CORS-based validation instead of secret keys

# ==========================================================
# Rate Limiting Configuration
# ==========================================================
# Default rate limits (can be overridden per route)
ratelimit.default.replenishRate=100
ratelimit.default.burstCapacity=150
ratelimit.default.requestedTokens=1

# Auth endpoints - stricter limits
ratelimit.auth.replenishRate=5
ratelimit.auth.burstCapacity=10
ratelimit.auth.requestedTokens=1

# API endpoints - moderate limits
ratelimit.api.replenishRate=50
ratelimit.api.burstCapacity=100
ratelimit.api.requestedTokens=1

# Public endpoints - balanced limits
ratelimit.public.replenishRate=20
ratelimit.public.burstCapacity=40
ratelimit.public.requestedTokens=1

# ==========================================================
# Actuator Configuration
# ==========================================================
management.endpoints.web.exposure.include=health,info,metrics,gateway
management.endpoint.health.show-details=always

# ==========================================================
# Logging
# ==========================================================
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.com.example.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# ==========================================================
# CORS Configuration (if needed)
# ==========================================================
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=${CORS_ORIGINS:http://localhost:4200,http://localhost:3000}
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600

